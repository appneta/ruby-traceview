# oboe 2.3.4 (11/21/13)

* Stacks that use a caching system like Varnish could see corrupted traces; fixed. 

# oboe 2.3.3.7 (11/06/13)

* Rename the _Init layer to "rack"
* Decode URLS when reporting them
* Resque layer naming split into 1) client queuing of a job: 'resque-client', 2) Resque worker running a job: 'resque-worker'
* Fix for an extension load error and some refactoring of functionality into a base module (OboeBase)
* Improved and more resilient method profiling
* Further refactoring for Ruby 2.0 support
* Track the version of the instrumentation installed

# oboe 2.3.2 (10/22/13)

* Backtrace collection can now be configured to skip certain components if a lighter-weight trace is desired
* On MRI Ruby the hostname of the Tracelyzer is now configurable via Oboe::Config[:reporter_host] (default is localhost)
* Fix to MongoDb query identification
* Event building in the Rack layer optimized
* Renamed "sampling_rate" to be "sample_rate" for consistency
* More tests added and documentation in anticipation of our Ruby open-source initiative

# oboe 2.2.6 (09/27/13)

* Query Privacy now fully supported; can configure the app to not send SQL parameters if needed
* Configuring the local sample rate now supports 1e6 notation
* Improved log messaging if a gem dependency is missing
* Now reporting HTTPStatus on http client calls
* Heroku - the start time when a request hits the load balancer now captured

# oboe 2.2.0 (09/12/13)

* Initial support for Rails 4
* Various internal reporting fixes and improvements
* Fix for auto sampling rate

# oboe 2.1.4 (08/01/13)

* Integration support for AppView Web

# oboe 2.1.3 (07/16/13)

* Allow _Access Key_ assignment via Environment variable: TRACEVIEW_CUUID

# oboe 2.1.1

* The gem now logs via a standard Ruby logger: Oboe.logger
* Add in rspec tests
* JRuby now supports Smart Tracing
* Fixed an invalid Profile name in ActionView Partial tracing

# oboe 1.4.2.2

* Rack - add handling for potential nil result

# oboe 1.4.2

* Cassandra - ensure all keys are captured when reporting exceptions
* JRuby detection fix

# oboe 1.4.1.2

* HTTP keys now captured at Rack level instead of Rails
* RUM templates are now pre-loaded
* Improved layer agnostic info event reporting

# oboe 1.4.0.2

* Resque support
* Fix Rails 2 bug where SET and SHOW could result in recursive calls
* Memcache - multi-get calls now report a total for number of keys and number 
of hits
* Configuration - added ability to identify components to skip from 
instrumentation
* Configuration - sending Resque parameters can be skipped if privacy an issue.

# oboe 1.3.9.1

* Add in Rack instrumentation
* Fix Function profiling of class methods bug
* Add backtraces to Cassandra and Mongo operations
* Rename the "render" layer to "actionview"

# oboe 1.3.8

* More comprehensive JRuby support

# oboe 1.3.7

* Added Moped driver instrumentation (Mongo/Mongoid)

# oboe 1.3.6

* Added Rails ActionView partial and collection rendering instrumentation

# oboe 1.3.5

* Added cassandra instrumentation

# oboe 1.3.4

* Added mongo-ruby-driver support

# oboe 1.3.3

* Updated RUM instrumentation templates

# oboe 1.3.2

* Fix a case when the RUM instrumentation header/footer methods would not 
return JS output, depending on how the way they were called from HAML.

# oboe 1.3.1

* Support for RUM instrumentation.
Fix for certain cases where exceptions were not properly propagated up to Rails 
error handlers.

# oboe 1.3.0

* The oboe and oboe_fu gems have been merged to simplify installation. The 
final oboe_fu gem (1.3.0) simply calls "require 'oboe'" now for backwards 
compatibility.
* Please note our updated installation instructions for the new location of 
Ruby oboe API methods.
* Our gem now successfully installs even if your platform does not have our 
base packages (liboboe) installed, so you can deploy to environments with or 
without TraceView support.

# oboe_fu 1.2.1

* Support for instrumenting the dalli module.

# oboe_fu 1.2.0

* Support for Rails 2.3, 3.0, 3.1, and 3.2.


